#!/bin/bash

set -uo pipefail

LAYER_VERSION=10 # TODO: replace with current git tag
API="http://$AWS_LAMBDA_RUNTIME_API/2018-06-01/runtime"
FILE="$LAMBDA_TASK_ROOT/${_HANDLER%%.*}.wasm"
HANDLER="${_HANDLER##*.}"
WARNING="warning: using \`--render\` with a function that returns values is experimental and may break in the future"
ENV_VARS=""

while read -r kv; do
    ENV_VARS="$ENV_VARS --env=$kv"
done <<< $(env)

echo -e "layer version\n$LAYER_VERSION\n\nenv vars\n$(env)\n\nwasmtime version"
/opt/bin/wasmtime --version

if [[ $? -ne 0 ]]; then
  curl -fsSLX POST "$API/init/error" -d '{"error":"runtime initialization failed"}'
  exit 1
fi

while :; do
  response=$(curl -fsSLD - "$API/invocation/next")
  body="${response#*\\n\\n}"
  headers="${response%"\n\n$body"}"
  request_id=$(grep -ioP "(?<=Lambda-Runtime-Aws-Request-Id: )(\S*)" <<< "$headers")
  _x_amzn_trace_id=$(grep -ioP "(?<=Lambda-Runtime-Trace-Id: )(\S*)" <<< "$headers")

  # TODO: pass event n context
  result=$(/opt/bin/wasmtime "$ENV_VARS" --env=_x_amzn_trace_id="$_x_amzn_trace_id" --disable-cache --invoke="$HANDLER" "$FILE" 2>&1 | grep -v "$WARNING")

  if [[ $? -eq 0 ]]; then
    curl -fsSLX POST "$API/invocation/$request_id/response" -d "$result"
  else
    curl -fsSLX POST "$API/invocation/$request_id/error" -d "$result"
  fi
done