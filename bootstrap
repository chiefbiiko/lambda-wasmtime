#!/usr/bin/env bash

set -Eeuo pipefail

RUNTIME_API_BASE_URL=http://$AWS_LAMBDA_RUNTIME_API/2018-06-01
FILE=${_HANDLER%%.*}
HANDLER=${_HANDLER##*.}
HEADERS_DUMP=$LAMBDA_TASK_ROOT/headers.txt

trap "rm $HEADERS_DUMP" EXIT

# TODO: install from tailing tarball
curl -fsS https://wasmtime.dev/install.sh | bash
WASMTIME=$(which wasmtime)

# TODO: post possible errors 2 /runtime/invocation/AwsRequestId/error

while :; do
  EVENT=$(curl -fsSLD $HEADERS_DUMP $RUNTIME_API_BASE_URL/runtime/invocation/next)
  REQUEST_ID=$(grep -ioP "(?<=Lambda-Runtime-Aws-Request-Id: )(\S*)" $HEADERS_DUMP)
  _X_AMZN_TRACE_ID=$(grep -ioP "(?<=Lambda-Runtime-Trace-Id: )(\S*)" $HEADERS_DUMP)
  
  # TODO: create a context (json) object with env vars and else

  # invoke the handler
  # TODO: allow passing additional args, and pass env vars, event n context
  # also set the _X_AMZN_TRACE_ID env var for the X-Ray SDK
  # strip the warning from return value
  RETURN_VALUE=$($WASMTIME --invoke=$HANDLER $FILE)

  # TODO: post possible errors 2 /runtime/invocation/AwsRequestId/error

  curl -fsSLX POST $RUNTIME_API_BASE_URL/runtime/invocation/$REQUEST_ID/response -d $RETURN_VALUE
done
