#!/bin/bash

# TODO: use a static path to the wasmtime binary

set -o pipefail

LAYER_VERSION=6
api=http://$AWS_LAMBDA_RUNTIME_API/2018-06-01/runtime
file=${_HANDLER%%.*}
handler=${_HANDLER##*.}
_wasmtime=$(which wasmtime)
warning="warning: using \`--render\` with a function that returns values is experimental and may break in the future"

echo layer version
echo $LAYER_VERSION

echo environment variables
env

echo wasmtime version
$_wasmtime --version

if [[ $? -ne 0 ]]; then
  curl -fsSLX POST $api/init/error -d '{"error":"runtime initialization failed"}'
  exit 1
fi

while :; do
  response=$(curl -fsSLD - $api/invocation/next)
  body=${response#*\\n\\n}
  headers=${response%"\n\n$body"}
  request_id=$(grep -ioP "(?<=Lambda-Runtime-Aws-Request-Id: )(\S*)" <<< $headers)
  _x_amzn_trace_id=$(grep -ioP "(?<=Lambda-Runtime-Trace-Id: )(\S*)" <<< $headers)

  # TODO: pass env vars, event n context, allow setting meta wasmtime flags
  # also set the _X_AMZN_TRACE_ID env var for the X-Ray SDK
  result=$($_wasmtime --invoke=$handler $LAMBDA_TASK_ROOT/$file.wasm 2>&1 | grep -v $warning)

  if [[ $? -eq 0 ]]; then
    curl -fsSLX POST $api/invocation/$request_id/response -d $result
  else
    curl -fsSLX POST $api/invocation/$request_id/error -d $result
  fi
done